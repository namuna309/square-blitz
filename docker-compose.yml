services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "80:3001" # 호스트의 80 포트를 컨테이너의 3001 포트로 매핑
    environment:
      NODE_ENV: production
    volumes:
      - ./backend:/app/backend
      - ./frontend/public:/app/frontend/public
    networks:
      - monitoring


  prometheus:
    container_name: prometheus
    build:
      context: .
      dockerfile: Dockerfile.prometheus
    volumes:
      # - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/data
      - ./prometheus.yml.template:/etc/prometheus/prometheus.yml.template
    environment:
      - EC2_PRIVATE_IP=${EC2_PRIVATE_IP} # 환경변수 전달
    ports:
      - "9090:9090"
    entrypoint: >
      sh -c 'export CONTAINER_IP=$(hostname -i) && envsubst < /etc/prometheus/prometheus.yml.template > /etc/prometheus/prometheus.yml && prometheus --config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring


volumes:
  grafana-storage: {}

networks:
  monitoring:
    driver: bridge